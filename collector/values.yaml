########################################################
# Global Options
########################################################

# If false, then the api.token is required at install time and registrycred will be generated by the Helm chart.
# The registrycred secret is derived from the api.token. It is used to download all Prequel images.
externalSecrets: false
# The Prequel provision token. It is found in User Profile -> Onboarding or obtained from Prequel Customer Success.
token: ""
# The Prequel API URL listening on port 8080.
url: "api-beta.prequel.dev"
# The container repo.
repository: "prequeldev"
# The Prequel app URL. Only used to generate the final install message when Helm is finished.
appUrl: "app-beta.prequel.dev"
# The Prequel NATS address.
nats: &nats_address "tls://gateway-beta.prequel.dev:7422"
# The name of your cluster. This is used to identify the cluster in the Prequel UI. If not set the cluster will be asigned a random name.
clusterName: ""
# Set scc to true when installing on a Red Hat OpenShift cluster.
scc: false
# Storage class name configuration for persistent volumes. If not specified, the default storage class will be used.
storageClassName: ""
# Enable the Docker Hub registry. If true, then the Prequel images will be pulled from Docker Hub.
dockerHubEnabled: true
########################################################
# Provision install job options
#
# The provision job is used to install the Prequel collector, and probes.
########################################################
provision:
  # The Prequel provision image. All containers are hosted in the same repository.
  image:
    repoName: "prequel"
    tag: "0.13.30"
    pullPolicy: IfNotPresent
  # The tolerations to apply to the Prequel provision job.
  tolerations: []
  # The name of the token secret. Change this if you are using a custom/external secret with a different name.
  tokenName: "prequeltoken"
  # The key of the token in the token secret.
  tokenKey: "apiKey"
########################################################
# MachineID install job options
#
# The machineid job is used to generate a unique identifier for all nodes in the cluster.
# This is compartmentalized to the machineid as an init container.
########################################################
machineid:
  image:
    repoName: "prequel"
    tag: "0.13.30"
    pullPolicy: IfNotPresent
########################################################
# Collector install job options
#
# The collector is the cluster scoped detection engine.
########################################################
collector:
  # enable the collector
  enabled: true
  # The number of collector replicas to deploy. Must be 1.
  replicaCount: 1
  # The event spool size for Kubernetes events.
  k8s:
    eventSpoolSize: 128Mi
  # The event spool size for Prequel events.
  eventSpool:
    size: 128Mi
  # The Prequel collector image.
  image:
    repoName: "prequel"
    tag: "0.13.30"
    pullPolicy: IfNotPresent
  # The fullname override for the Prequel collector service account.
  fullnameOverride: "prequel-collector"
  # The service account to use for the Prequel collector.
  serviceAccount:
    create: true
    annotations: {}
    name: "prequel-collector"
  # The tolerations to apply to the Prequel collector.
  tolerations: []
  # The security context to apply to the Prequel collector.
  securityContext:
    runAsUser: 65532
    runAsGroup: 65532
    fsGroup: 65532
  # The resources to apply to the Prequel collector.
  resources:
    requests:
      memory: 500Mi
    limits:
      memory: 4Gi
  # The affinity to apply to the Prequel collector.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
########################################################
# Probes
#
# Lightweight detection engine daemonset.
########################################################
probes:
  # enable the probes
  enabled: true
  # The Prequel probes image.
  image:
    repoName: "prequel"
    tag: "0.13.30"
    pullPolicy: IfNotPresent
  # The fullname override for the Prequel probes service account.
  fullnameOverride: "prequel-probes"
  # The service account to use for the Prequel probes.
  serviceAccount:
    create: true
    annotations: {}
    name: "prequel-probes"
  # The tolerations to apply to the Prequel probes.
  tolerations: []
  # The resources to apply to the Prequel probes.
  resources:
    requests:
      memory: 200Mi
    limits:
      memory: 1000Mi
  # The affinity to apply to the Prequel probes.
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                  - linux
  # The security context to apply to the Prequel probes.
  securityContext:
    allowPrivilegeEscalation: true
    capabilities:
      add:
        - SYS_ADMIN
    privileged: true
    seccompProfile:
      type: RuntimeDefault
########################################################
# Prequel NATS leafnode server options
# 
# See https://github.com/nats-io/k8s/blob/main/helm/charts/nats/values.yaml
########################################################
nats:
  reloader:
    enabled: true
    image:
      fullImageName: prequeldev/prequel:0.13.30
      pullPolicy: Always
    merge:
      args:
        - "/usr/local/bin/nats-server-config-reloader"
        - -pid
        - /var/run/nats/nats.pid
        - -config
        - /etc/nats-config/nats.conf
        - -config
        - /etc/nats-ca-cert/ca.crt
        - -config
        - /etc/nats-certs/nats/tls.crt
        - -config
        - /etc/nats-certs/nats/tls.key
  # The Prequel NATS box.
  natsBox:
    enabled: false
  # The Prequel NATS service.
  service:
    enabled: false
  tlsCA:
    enabled: true
    secretName: nats-ca
  headlessService:
    name: nats
  statefulSet:
    name: prequel-nats
  config:
    nats:
      tls:
        enabled: true
        patch: [{op: add, path: /verify, value: true}]
        secretName: nats-tls
        tlsCA:
          enabled: true
    merge:
      logtime: true
      max_payload: << 16MB >> # explicity define max payload
      max_pending: << 64M >> # maximum number of bytes buffered for a connection
      leafnodes:
        remotes:
          - url: *nats_address
            credentials: "/etc/nats-user/user.creds"
            tls:
              handshake_first: true
  container:
    image:
      fullImageName: prequeldev/prequel:0.13.30
    env:
      # different from k8s units, suffix must be B, KiB, MiB, GiB, or TiB
      # should be ~90% of memory limit
      GOMEMLIMIT: 920MiB
    merge:
      args:
        - "/usr/local/bin/nats-server"
        - "--config"
        - "/etc/nats-config/nats.conf"
      resources:
        requests:
          cpu: "500m"
          memory: 500Mi
        limits:
          cpu: "2"
          memory: 1Gi
    patch:
      - op: add
        path: /volumeMounts/-
        value:
          name: nats-user
          mountPath: /etc/nats-user
          readOnly: true
  podTemplate:
    patch:
      - op: add
        path: /spec/volumes/-
        value:
          name: nats-user
          secret:
            secretName: nats-user
# Create dynamic manifests via values:
extraObjects: []
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     name: credentials-team-x
#   type Opaque
#   data:
#     username: team-x-username
#     password: team-x-password
