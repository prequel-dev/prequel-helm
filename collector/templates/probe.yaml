
{{ if .Values.probes.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels: 
    {{- include "probes.labels" . | nindent 4 }}
  name: {{ include "probes.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  selector: 
    matchLabels:
      {{- include "probes.selectorLabels" . | nindent 6 }}
  template: 
    metadata:
      labels:
        {{- include "probes.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: "machineid"
          command:
          - '/app/prequel-machineid'
          - '/data/machineid.txt'
          image: "{{ .Values.repository }}/{{ .Values.machineid.image.repoName }}:{{ .Values.machineid.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.collector.image.pullPolicy }}
          env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          volumeMounts:
          - name: shared-data
            mountPath: /data
      containers:
      - args: ["/app/prequel-probes"]
        image: "{{ .Values.repository }}/{{ .Values.probes.image.repoName }}:{{ .Values.probes.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.probes.image.pullPolicy }}
        name: {{ .Values.probes.fullnameOverride }}
        resources: {}
        securityContext:
          {{- toYaml .Values.probes.securityContext | nindent 10 }}
        volumeMounts:
        - name: host-root
          mountPath: /host
          readOnly: true
        - mountPath: /etc/nats-certs/nats
          name: nats-tls
          readOnly: true
        - mountPath: /etc/nats-ca-cert
          name: tls-ca
          readOnly: true
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: logmeta
          mountPath: /etc/prequel/logmeta
        - name: spool
          mountPath: /etc/prequel/spool
        - name: shared-data
          mountPath: /data
      hostPID: true
      {{- with .Values.probes.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }} 
      {{- with .Values.probes.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.probes.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "probes.serviceAccountName" . }}
      volumes:
      - name: host-root
        hostPath:
            path: /
            type: Directory
      - name: sys
        hostPath:
            path: /sys
            type: Directory
      - name: nats-tls
        secret:
          secretName: nats-tls
      - name: tls-ca
        secret:
          secretName: nats-ca
      - name: shared-data
        emptyDir: {}
      - name: logmeta
        emptyDir: {}
      - name: spool
        emptyDir: {}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    {{- include "probes.labels" . | nindent 4 }}
  name: {{ include "probes.fullname" . }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    {{- include "probes.labels" . | nindent 4 }}
  name: {{ include "probes.fullname" . }}
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "probes.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ include "probes.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    {{- include "probes.labels" . | nindent 4 }}
  name: {{ include "probes.fullname" . }}
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
{{- if and (not .Values.externalSecrets) (not .Values.dockerHubEnabled) }}
apiVersion: v1
kind: Secret
metadata:
  name: registrycred
  namespace: {{ .Release.Namespace }}
  annotations:
    # ArgoCD requires jobs be annotated with a PreSync
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-5"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ printf "{ \"auths\": { \"%s\": { \"auth\": \"%s\" } } }" .Values.repository ( printf "prequel:%s" .Values.token | b64enc) | b64enc }}
{{- else }}
# No Secret is created; ensure registrycred is created by an external secret manager ahead of time
{{- end }}
---
{{- if .Values.scc }}
kind: SecurityContextConstraints
apiVersion:  security.openshift.io/v1
metadata:
 name: prequel-scc
allowPrivilegedContainer: true
allowHostPID: true
allowHostIPC: false
allowHostPorts: false
readOnlyRootFilesystem: false
allowedCapabilities:
- SYS_ADMIN
- SYS_PTRACE
allowHostNetwork: true
allowHostDirVolumePlugin: true
runAsUser:
 type: RunAsAny
seLinuxContext:
 type: RunAsAny
users:
- system:serviceaccount:prequel:prequel-probes
- system:serviceaccount:prequel:prequel-collector
{{- end }}

{{- end }}